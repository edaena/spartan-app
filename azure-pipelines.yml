# Multi-stage Bedrock Azure Pipeline
# Stages:
# 1. src_to_acr: builds the source and pushes a container to acr
# 2. hld_update: updates the hld repo with the new container image

trigger:
- master
- DEPLOY/*
- deploy/*

schedules:
- cron: "0 0 * * *"
  displayName: Daily midnight build
  branches:
    include:
    - master
  always: true

# Don't run against PRs
pr: none

variables:
- name: APP_NAME
  value: go-docker-k8s-demo
- group: Container Journey
- group: Spartan CI Variables

stages:
- stage: src_to_acr
  jobs:
  - job: "run_build_push_acr"
    pool:
      vmImage: 'Ubuntu 16.04'
    variables:
      GOBIN:  '$(GOPATH)/bin' # Go binaries path
      GOROOT: '/usr/local/go1.11' # Go installation path
      GOPATH: '$(system.defaultWorkingDirectory)/gopath' # Go workspace path
      modulePath: '$(GOPATH)/src/github.com/$(build.repository.name)' # Path to the module's code
    steps:
    - script: |
        mkdir -p '$(GOBIN)'
        mkdir -p '$(GOPATH)/pkg'
        mkdir -p '$(modulePath)'
        shopt -s extglob
        shopt -s dotglob
        mv !(gopath) '$(modulePath)'
        echo '##vso[task.prependpath]$(GOBIN)'
        echo '##vso[task.prependpath]$(GOROOT)/bin'
      displayName: 'Set up the Go workspace'
    
    - script: |
        mkdir -p '$(GOBIN)'
        mkdir -p '$(GOPATH)/pkg'
        mkdir -p '$(modulePath)'
        shopt -s extglob
        shopt -s dotglob
        mv !(gopath) '$(modulePath)'
        echo '##vso[task.prependpath]$(GOBIN)'
        echo '##vso[task.prependpath]$(GOROOT)/bin'
      displayName: 'Set up the Go workspace'

    - bash: |
        tag_name="$(Build.Repository.Name):$(build.BuildNumber)"
        commitId=$(Build.SourceVersion)
        commitId=$(echo "${commitId:0:7}")
        service=$(Build.Repository.Name)
        service=${service##*/}
        echo "Downloading the latest SPK version"
        curl https://raw.githubusercontent.com/Microsoft/bedrock/master/gitops/azure-devops/build.sh > build.sh
        chmod +x build.sh
        . ./build.sh --source-only
        get_spk_version
        download_spk
        ./spk/spk deployment create -n $(ACCOUNT_NAME) -k $(ACCOUNT_KEY) -t $(TABLE_NAME) -p $(PARTITION_KEY) --p1 $(Build.BuildId) --image-tag $tag_name --commit-id $commitId --service $service
      displayName: Update manifest pipeline details in CJ db
      env:
        SCRIPT: https://raw.githubusercontent.com/samiyaakhtar/spk/686-simply-pipelines/scripts/update_introspection.sh
    
    - task: Docker@2
      inputs:
        containerRegistry: 'hellorings_acr'
        repository: '$(Build.Repository.Name)'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        tags: '$(build.BuildNumber)'
        workingDirectory:  '$(modulePath)'


- stage: hld_update
  dependsOn: src_to_acr
  jobs:
  - job: update_image_tag
    pool:
      vmImage: 'Ubuntu 16.04'
    steps:
    - script: |
        latest_commit=$(git rev-parse --short HEAD)
        tag_name="$(Build.Repository.Name):$(build.BuildNumber)"
        echo "Downloading the latest SPK version"
        curl https://raw.githubusercontent.com/Microsoft/bedrock/master/gitops/azure-devops/build.sh > build.sh
        chmod +x build.sh
        . ./build.sh --source-only
        get_spk_version
        download_spk
        ./spk/spk deployment create  -n $(ACCOUNT_NAME) -k $(ACCOUNT_KEY) -t $(TABLE_NAME) -p $(PARTITION_KEY)  --p2 $(Build.BuildId) --hld-commit-id $latest_commit --env $(Build.SourceBranchName) --image-tag $tag_name
      env:
        GITHUB_TOKEN_VAR: $(GITHUB_TOKEN)
        REPO: https://github.com/edaena/fabrikate-spartan-cluster.git
        ACCESS_TOKEN_SECRET: $(ACCESS_TOKEN)
