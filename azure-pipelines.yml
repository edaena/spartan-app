# Go
# Build your Go project.
# Add steps that test, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/go

trigger:
- master
- DEPLOY/*
- deploy/*

# Don't run against PRs
pr: none

variables:
- name: APP_NAME
  value: go-docker-k8s-demo

stages:
- stage: build
  jobs:
  - job: "run_build_push_acr"
    pool:
      vmImage: 'Ubuntu 16.04'
    variables:
      GOBIN:  '$(GOPATH)/bin' # Go binaries path
      GOROOT: '/usr/local/go1.11' # Go installation path
      GOPATH: '$(system.defaultWorkingDirectory)/gopath' # Go workspace path
      modulePath: '$(GOPATH)/src/github.com/$(build.repository.name)' # Path to the module's code
    steps:
    - script: |
        mkdir -p '$(GOBIN)'
        mkdir -p '$(GOPATH)/pkg'
        mkdir -p '$(modulePath)'
        shopt -s extglob
        shopt -s dotglob
        mv !(gopath) '$(modulePath)'
        echo '##vso[task.prependpath]$(GOBIN)'
        echo '##vso[task.prependpath]$(GOROOT)/bin'
      displayName: 'Set up the Go workspace'
      
    - script: |
        echo "some data for the file" >> $(System.DefaultWorkingDirectory)/my_artifact.txt
      displayName: 'Write out file'

- stage: post_build
  dependsOn: build
  jobs:
  - job: update_image_tag
    pool:
      vmImage: 'Ubuntu 16.04'
    steps:
    - script: |
       echo "update hld"
      displayName: "Post build step"
      
